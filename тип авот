import telebot
from telebot import types
import random

# üîë –¢–æ–∫–µ–Ω –∏ ID –∞–¥–º–∏–Ω–∞
TOKEN = "8034804690:AAG8Cj9usFEj81ad9iXcS7upMbN-yxrQPjo"
ADMIN_ID = 7392835467

bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}   # {user_id: "waiting_for_topic"}
pending_replies = {}  # {admin_id: client_id}

# –ù–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
banner_photos = [
    "https://i.pinimg.com/736x/d4/bf/f4/d4bff4c90fbdbf3016d4fac884e24c92.jpg",  # –Ω–æ—É—Ç–±—É–∫ + —Ä–∞–±–æ—Ç–∞
    "https://i.pinimg.com/736x/c5/92/23/c592234064d83e45d2a3b75862452a30.jpg",  # –∫–æ–º–∞–Ω–¥–∞ –∑–∞ –Ω–æ—É—Ç–±—É–∫–∞–º–∏
    "https://i.pinimg.com/736x/62/77/46/627746d1d482bf68a36313eaf864c944.jpg",     # –¥–∏–∑–∞–π–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
    "https://i.pinimg.com/736x/9a/67/6b/9a676bc296601c8d1dcf514b5090030c.jpg",  # –¥–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞

]



# üìå –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞ (—á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–∑–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é)
def send_start_menu(chat_id):
    photo_url = random.choice(banner_photos)  # –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –±–∞–Ω–Ω–µ—Ä
    caption = (
        "üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
        "üìä *–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏:*\n"
        "‚ñ´Ô∏è 1 —Å–ª–∞–π–¥ ‚Äî *150 —Ç–µ–Ω–≥–µ*\n"
        "‚ñ´Ô∏è 1 —Å–ª–∞–π–¥ ‚Äî *25 —Ä—É–±–ª–µ–π*\n\n"
        "üëá –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
    )

    kb = types.InlineKeyboardMarkup(row_width=2)
    kb.add(
        types.InlineKeyboardButton("üìå –ó–∞–∫–∞–∑–∞—Ç—å", callback_data="order"),
        types.InlineKeyboardButton("‚Ñπ –û–±–æ –º–Ω–µ", callback_data="about")
    )
    kb.add(types.InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", callback_data="game"))

    bot.send_photo(
        chat_id=chat_id,
        photo=photo_url,
        caption=caption,
        reply_markup=kb,
        parse_mode="Markdown"
    )


# üìå –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start(message):
    send_start_menu(message.chat.id)


# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def on_callback(call):
    if call.data == "order":
        bot.send_message(
            call.message.chat.id,
            "‚úçÔ∏è –ù–∞–ø–∏—à–∏ *—Ç–µ–º—É —Å–≤–æ–µ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏* –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.",
            parse_mode="Markdown"
        )
        user_states[call.from_user.id] = "waiting_for_topic"

    elif call.data == "about":
        bot.send_message(
            call.message.chat.id,
            "üí° *–û–±–æ –º–Ω–µ:*\n\n"
            "–Ø –¥–µ–ª–∞—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–∞ –∑–∞–∫–∞–∑ üìä\n"
            "‚ö° –õ—é–±–∞—è —Ç–µ–º–∞, –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.\n\n"
            "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º üëâ @suga_science üí™",
            parse_mode="Markdown"
        )

    # üéÆ –ò–≥—Ä–∞
    elif call.data == "game":
        kb = types.InlineKeyboardMarkup(row_width=5)
        for i in range(1, 6):
            kb.add(types.InlineKeyboardButton(str(i), callback_data=f"guess_{i}"))
        bot.send_message(
            call.message.chat.id,
            "üé≤ –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!",
            reply_markup=kb
        )

    elif call.data.startswith("guess_"):
        guess = int(call.data.split("_")[1])
        secret = random.randint(1, 5)
        if guess == secret:
            bot.send_message(call.message.chat.id, f"üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –Ø –∑–∞–≥–∞–¥–∞–ª {secret}. –¢—ã –≤—ã–∏–≥—Ä–∞–ª!")
        else:
            bot.send_message(call.message.chat.id, f"üòÖ –ù–µ —É–≥–∞–¥–∞–ª, —è –∑–∞–≥–∞–¥–∞–ª {secret}. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!")
        send_start_menu(call.message.chat.id)

    # ‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑
    elif call.data.startswith("accept_"):
        client_id = int(call.data.split("_")[1])
        bot.send_message(client_id, "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ!")
        bot.send_message(call.message.chat.id, "–ó–∞–∫–∞–∑ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ *–ø—Ä–∏–Ω—è—Ç—ã–π* ‚úÖ", parse_mode="Markdown")

    # ‚úçÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É
    elif call.data.startswith("reply_"):
        client_id = int(call.data.split("_")[1])
        pending_replies[call.from_user.id] = client_id
        bot.send_message(call.message.chat.id, "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞, –∏ —è –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—é.")

    # üì¶ –ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω
    elif call.data.startswith("done_"):
        client_id = int(call.data.split("_")[1])
        bot.send_message(client_id, "‚úÖ –í–∞—à–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ üôå")
        send_start_menu(client_id)
        bot.send_message(call.message.chat.id, "–ó–∞–∫–∞–∑ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ *–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π* üì¶", parse_mode="Markdown")


# üìå –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@bot.message_handler(func=lambda m: True)
def on_message(message):
    uid = message.from_user.id

    # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
    if uid == ADMIN_ID and uid in pending_replies:
        client_id = pending_replies.pop(uid)
        bot.send_message(client_id, f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{message.text}")
        bot.send_message(ADMIN_ID, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É.")
        return

    # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–º—É
    if user_states.get(uid) == "waiting_for_topic":
        topic = message.text.strip()

        bot.send_message(message.chat.id, "‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

        uname = f"@{message.from_user.username}" if message.from_user.username else \
            f"{message.from_user.first_name or ''} {message.from_user.last_name or ''}".strip()

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
        kb = types.InlineKeyboardMarkup(row_width=2)
        kb.add(
            types.InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑", callback_data=f"accept_{uid}"),
            types.InlineKeyboardButton("‚úçÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É", callback_data=f"reply_{uid}"),
            types.InlineKeyboardButton("üì¶ –ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω", callback_data=f"done_{uid}")
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –∞–¥–º–∏–Ω—É
        try:
            bot.send_message(
                ADMIN_ID,
                f"üì¢ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\n"
                f"üë§ –û—Ç: {uname} (ID: {uid})\n"
                f"üìå –¢–µ–º–∞: {topic}",
                parse_mode="Markdown",
                reply_markup=kb
            )
        except Exception as e:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É:", e)

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        user_states.pop(uid, None)


# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("‚úÖ Bot is running. Send /start to your bot.")
bot.polling(none_stop=True, interval=0, timeout=20)
